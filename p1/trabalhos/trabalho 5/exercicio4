{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["4AIivUomSrIQ","PZsM-dVbSwdk"],"authorship_tag":"ABX9TyPPr58/iD+AOlKTWpVbk/5F"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Uma cavidade em uma matriz é um elemento que tem valor menor que todos os elementos ao seu redor.\n","\n","Exemplo\n","\n","2 5 7\n","3 1 3\n","8 6 9\n","Nesse caso, o elemento de índice (1,1) é uma cavidade.\n","\n","Dito isto, encontre todas as cavidades de uma matriz dada como entrada."],"metadata":{"id":"f7tsYk3Es5Cd"}},{"cell_type":"markdown","source":["#NÃO FUI EU QUEM FEZ"],"metadata":{"id":"4AIivUomSrIQ"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"exQyBTXU_jr5"},"outputs":[],"source":["l,c = input().split()\n","l,c = int(l), int(c)\n","\n","entrada = [int(i) for i in input().split()]\n","matriz = []\n","\n","aux = 0\n","for x in range(l):\n","    matriz.append(entrada[aux:aux+c])\n","    aux+=c\n","\n","for l1 in range(l):\n","    for c1 in range(c):\n","        cavidade = True\n","\n","        if(l1-1>=0):\n","            if matriz[l1][c1] >= matriz[l1-1][c1]:\n","                cavidade = False\n","\n","        if(c1-1>=0):\n","            if matriz[l1][c1] >= matriz[l1][c1-1]:\n","                cavidade = False\n","\n","        if(l1+1<l):\n","            if matriz[l1][c1] >= matriz[l1+1][c1]: \n","                cavidade = False\n","\n","        if(c1+1<c):\n","            if matriz[l1][c1] >= matriz[l1][c1+1]: \n","                cavidade = False \n","\n","        if(l1-1>=0) and (c1+1<c):\n","            if matriz[l1][c1] >= matriz[l1-1][c1+1]:\n","                cavidade = False\n","\n","        if(l1+1<l) and (c1-1>=0):\n","            if matriz[l1][c1] >= matriz[l1+1][c1-1]:\n","                cavidade = False"]},{"cell_type":"markdown","source":["#MINHA TENTATIVA"],"metadata":{"id":"PZsM-dVbSwdk"}},{"cell_type":"code","source":["m, n = input().split()\n","m, n = int(m), int(n)\n","\n","elem = [int(i) for i in input().split()]\n","matriz = []\n","lista = []\n","\n","while len(elem) != 0:\n","\taux =[]\n","\tfor i in range (m):\n","\t\ta = elem.pop(0)\n","\t\taux.append(a)\n","\tmatriz.append(aux)\n","\n","for i in range (m):\n","\tfor j in range(n):\n","\t\tif  (i-1 <= 0) and (i+1 < m):\n","\t\t\tif (matriz[i][j] < matriz[i-1][j]) and (matriz[i][j] < matriz[i+1][j]) and (matriz[i][j] < matriz[i][j-1]) and (matriz[i][j] < matriz[i][j+1]) and (matriz[i][j] < matriz[i+1][j+1]) and (matriz[i][j] < matriz[i-1][j-1]) and (matriz[i][j] < matriz[i+1][j-1]) and (matriz[i][j] < matriz[i-1][j+1]):\n","\t\t\t\tlista.append([i,j])\n","\t\telif (i-1 <= 0):\n","\t\t\tif (matriz[i][j] < matriz[i-1][j]) and (matriz[i][j] < matriz[i][j-1]) and (matriz[i][j] < matriz[i][j+1]) and (matriz[i][j] < matriz[i-1][j-1]) and (matriz[i][j] < matriz[i-1][j+1]):\n","\t\t\t\tlista.append([i,j])\n","\t\telif (i+1 < m):\n","\t\t\tif (matriz[i][j] < matriz[i+1][j]) and (matriz[i][j] < matriz[i][j-1]) and (matriz[i][j] < matriz[i][j+1]) and (matriz[i][j] < matriz[i-1][j-1]) and (matriz[i][j] < matriz[i-1][j+1]):\n","\t\t\t\tlista.append([i,j])\n","\n","for i in range (len(lista)):\n","\ta = str(lista[i][0])\n","\tb = str(lista[i][1])\n","\tprint(\"(\" + a + \",\" + \" \" + b + \")\")"],"metadata":{"id":"TRq93DmRS58r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["m, n = input().split()\n","m, n = int(m), int(n)\n","\n","elem = [int(i) for i in input().split()]\n","matriz = []\n","lista = []\n","\n","while len(elem) != 0:\n","\taux =[]\n","\tfor i in range (n):\n","\t\ta = elem.pop(0)\n","\t\taux.append(a)\n","\tmatriz.append(aux)\n","\n","for i in range (m):\n","\tfor j in range(n):\n","\t\tcontar = 0\n","\t\tif (i-1 < 0) and (j-1 < 0):\n","\t\t\tcontar += 1\n","\t\telif matriz[i][j] < matriz[i-1][j-1]:\n","\t\t\tcontar += 1\n","\t\tif (i-1 < 0):\n","\t\t\tcontar += 1\n","\t\telif matriz[i][j] < matriz[i-1][j]:\n","\t\t\tcontar += 1\n","\t\tif (j-1 < 0):\n","\t\t\tcontar += 1\n","\t\telif matriz[i][j] < matriz[i][j-1]:\n","\t\t\tcontar += 1\n","\t\tif (i+1 == m) or (j+1 == n):\n","\t\t\tif (i+1 == m):\n","\t\t\t\tcontar += 1\n","\t\t\telif matriz[i][j] < matriz[i+1][j]:\n","\t\t\t\tcontar += 1\n","\t\t\tif (j+1 == n):\n","\t\t\t\tcontar += 1\n","\t\t\telif matriz[i][j] < matriz[i][j+1]:\n","\t\t\t\tcontar += 1\n","\t\telif matriz[i][j] < matriz[i+1][j+1]:\n","\t\t\tcontar += 1\n","\t\tif (i+1 == m):\n","\t\t\tcontar += 1\n","\t\telif matriz[i][j] < matriz[i+1][j]:\n","\t\t\tcontar += 1\n","\t\tif (j+1 == n):\n","\t\t\tcontar += 1\n","\t\telif matriz[i][j] < matriz[i][j+1]:\n","\t\t\t\tcontar += 1\n","\t\t\n","\t\tif contar == 6:\n","\t\t\tlista.append([i,j])\n","\n","for i in range (len(lista)):\n","\ta = str(lista[i][0])\n","\tb = str(lista[i][1])\n","\tprint(\"(\" + a + \",\" + \" \" + b + \")\")"],"metadata":{"id":"5BUZNrQeTXuy"},"execution_count":null,"outputs":[]}]}