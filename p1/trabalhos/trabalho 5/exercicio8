{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["Lm7pc9LHVclF"],"authorship_tag":"ABX9TyMY8KzFkjVcvqfhTTrJ/mjh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Dado um tabuleiro N \\times MN×M de batalha naval (1 = navio, 0 = água) e uma sequência de TT tiros (x,y)(x,y), calcule se todos os navios foram destruídos ou não. Para um navio ser destruído, todas casas do tabuleiro das quais ele ocupa devem ser atingidas.\n","\n","\n","\n","Entrada\n","\n","A primeira linha contém os valores de N, M e T;\n","As N linhas subsequentes contêm as linhas da matriz que representa o tabuleiro;\n","As últimas T linhas contém as coordenadas dos tiros.\n","Saída\n","\n","A saída deverá ser \n","\n","S\n","caso todos os navios tenham sido destruídos, ou\n","\n","N\n","caso contário."],"metadata":{"id":"9WGInjpQVav9"}},{"cell_type":"markdown","source":["#NÃO FUI EM QUEM FEZ"],"metadata":{"id":"Lm7pc9LHVclF"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"p3rbg5NH_2_e"},"outputs":[],"source":["l, c, t = input().split()\n","l, c, t = int(l), int(c), int(t)\n","\n","mapa = []\n","for x in range(l):\n","    mapa.append([int(i) for i in input().split()])\n","\n","tiros = []\n","for x in range(t):\n","    tiros.append([int(i) for i in input().split()])\n","\n","navios = []\n","for l1 in range(l):\n","    for c1 in range(c):\n","        if (mapa[l1][c1] == 1):\n","            navios.append([l1, c1])\n","n1 = 0\n","while (n1 < len(navios)):\n","    aux = False\n","    for x in tiros:\n","        if ((navios[n1][0] == x[0]) and (navios[n1][1] == x[1])):\n","            navios.remove(navios[n1])\n","            aux = True\n","            break\n","\n","    if (not aux):\n","        n1 += 1\n","\n","if (len(navios) == 0):\n","    print('S')\n","else:\n","    print('N')"]}]}