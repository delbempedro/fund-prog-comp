{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMkzQj2/Dyg066A95OVX6W0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Faça um programa que leia as dimensões de duas matrizes AA e BB, e depois leia as duas matrizes.\n","\n","Se as matrizes forem de tamanhos compatíveis para multiplicação, multiplique as matrizes e imprima o resultado da multiplicação, caso contrário, imprima 'Incompatíveis'."],"metadata":{"id":"OKF5zI5wD6P6"}},{"cell_type":"markdown","source":["#NÃO FUI EU QUEM FEZ"],"metadata":{"id":"LnoRgdfvSU6Z"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"cA5QF50R_EYu"},"outputs":[],"source":["l1,c1,l2,c2 = input().split()\n","l1,c1,l2,c2 = int(l1), int(c1), int(l2),int(c2)\n","\n","M1, M2 = [], []\n","\n","for i in range(l1):\n","    c = [float(x) for x in input().split()]\n","    M1.append(c)\n","\n","for i in range(l2):\n","    c = [float(x) for x in input().split()]\n","    M2.append(c)\n","\n","if(c1!=l2):\n","    print(\"Incompatíveis\")\n","else:\n","    mTemp, mRes = [], []\n","\n","    for i in range(l1):\n","        for j in range(c2):\n","            c = 0\n","            for k in range(c1):\n","                c += M1[i][k]*M2[k][j]\n","            mTemp.append('%.2f' % c)\n","        mRes.append(mTemp)\n","        mTemp = []\n","\n","    for i in range(len(mRes)):\n","        print(' '.join(mRes[i]))"]},{"cell_type":"markdown","source":["#MINHA TENTATIVA"],"metadata":{"id":"DhpJOcnrSjLa"}},{"cell_type":"code","source":["Al, Ac, Bl, Bc = input().split()\n","Al, Ac, Bl, Bc = int(Al), int(Ac), int(Bl), int(Bc)\n","\n","matrizA = []\n","\n","for i in range (Al):\n","\tmatrizA.append([float(j) for j in input().split()])\n","\n","matrizB = []\n","\n","for i in range (Bl):\n","\tmatrizB.append([float(j) for j in input().split()])\n","\n","matrizR = []\n","\n","for h in range (Al):\n","\tmatrizAUX = []\n","\tfor i in range (Bc):\n","\t\tmult = 0\n","\t\tfor j in range (Bc):\n","\t\t\tmult += matrizA[h][j] * matrizB[i][j]\n","\t\tmatrizAUX.append(\"%.2f\"%mult)\n","\tmatrizR.append(matrizAUX)\n","\n","if (Ac != Bl):\n","\tprint(\"Incompatíveis\")\n","else:\n","\tfor i in range (Al):\n","\t\tprintar = ' '.join(matrizR[i])\n","\t\tprint(printar)"],"metadata":{"id":"5eNTnJGCSm1d","colab":{"base_uri":"https://localhost:8080/","height":380},"executionInfo":{"status":"error","timestamp":1666280426948,"user_tz":180,"elapsed":4493,"user":{"displayName":"Pedro Calligaris Delbem","userId":"01497466012442552926"}},"outputId":"7ce80806-095e-436b-f6e1-8c4c5d4edb94"},"execution_count":1,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-4c88b0f7cdef>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mAl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mAc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mAl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mAc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mBc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mAl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mAc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mBl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mBc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mmatrizA\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    861\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    862\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 863\u001b[0;31m             \u001b[0mpassword\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    864\u001b[0m         )\n\u001b[1;32m    865\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    902\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    903\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 904\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    905\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    906\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"]}]}]}